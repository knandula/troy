{"version":3,"sources":["client/config.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,WAAW,cAAc,oBAAoB,oBAAoB,qBAAqB,oBAAoB,6BAA6B,UAAU,SAAS;IACvK;;IAEA,IAAI,SAQJ;IAPA,OAAO;QACH,SAAS,CAAC,UAAU,UAAU;YAC1B,UAAU,SAAS;WACpB,UAAU,aAAa,IAAI,UAAU,kBAAkB,IAAI,UAAU,kBAAkB,IAAI,UAAU,kBAAkB,IAAI,UAAU,iBAAiB,IAAI,UAAU,yBAAyB;QAChM,SAAS,YAAY;YAGzB,YAAY,QAAQ,OAAO,OAAO,CAC9B,cACA,cACA,cACA,4BACA,uBACA;;YAIR,UACK,sFAAO,UAAS,mBAAmB,eAAe,oBAAoB,gBAAgB;gBACnF,cAAc,cAAc;gBAC5B,eACK,MAAM,QAAQ;oBACX,KAAK;oBACL,aAAa;oBACb,YAAa;mBAEhB,MAAM,QAAQ;oBACX,KAAI;oBACJ,aAAa;oBACb,YAAa;;gBAErB,mBAAmB,UAAU;;gBAE7B,mBAAmB,KAAK,UAAU,WAAW,WAAW;oBAEpD,IAAI,OAAO,UAAU;wBAAQ,aAAa,KAAK;oBAC/C,IAAI,SAAS,YAAY;wBAErB,UAAU,UAAU,KAAK;;;;;YAKzC,UAAU,0CAAI,UAAU,YAAY,QAAQ,WAAW;;gBAEnD,WAAW,IAAI,qBAAqB,UAAU,OAAO,SAAS,UAAU,WAAW;oBAC/E,QAAQ,IAAI;oBACZ,QAAQ,IAAI;;;;YAVR,QAAQ,WAcL;;;GAXZ","file":"client/config.js","sourcesContent":["\r\nimport angular from 'angular';\r\nimport 'ngSanitize';\r\nimport 'angular-material';\r\nimport 'angular-messages';\r\nimport 'angular-ui-router';\r\nimport 'ui-router-extras';\r\nimport 'angular-google-analytics';\r\n\r\n\r\n\r\nvar appModule = angular.module('app', [\r\n        'ngSanitize',\r\n        'ngMessages',\r\n        'ngMaterial',\r\n        'angular-google-analytics',\r\n        'ct.ui.router.extras',\r\n        'ui.router'\r\n    ]\r\n);\r\n\r\nappModule\r\n    .config(function($locationProvider, $httpProvider, $urlRouterProvider, $stateProvider) {\r\n        $httpProvider.useApplyAsync(true);\r\n        $stateProvider\r\n            .state('home', {\r\n                url: \"/welcome\",\r\n                templateUrl: 'client/app/views/welcome.html',\r\n                controller : 'AppController'\r\n            })\r\n            .state('main', {\r\n                url:\"/main\",\r\n                templateUrl: 'client/app/views/main.html',\r\n                controller : 'streatbeatcntrl'\r\n            });\r\n        $urlRouterProvider.otherwise(\"/welcome\");\r\n        //      allow case insensitive urls\r\n        $urlRouterProvider.rule(function ($injector, $location) {\r\n//          what this function returns will be set as the $location.url\r\n            var path = $location.path(), normalized = path.toLowerCase();\r\n            if (path !== normalized) {\r\n//              instead of returning a new url ,change the $location.path directly so we needn't to worry about building a new url string and so new state change is not triggered\r\n                $location.replace().path(normalized);\r\n            }\r\n        });\r\n    });\r\n\r\nappModule.run(function ($rootScope, $state, $location) {\r\n\r\n    $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState) {\r\n        console.log(toState);\r\n        console.log(fromState);\r\n    });\r\n});\r\n\r\nexport default appModule;\r\n"],"sourceRoot":"/source/"}