{"version":3,"sources":["client/controllers.js"],"names":[],"mappings":"AAAA,OAAO,SAAS,CAAC,kBAAkB,UAAU,SAAS;IAGtD;IADI,IAAI;IACJ,OAAO;QACH,SAAS,CAAC,UAAU,eAAe;YAC/B,YAAY,cAAc;;QAE9B,SAAS,YAAY;;YAD7B,UAAU,WAAW,mBACjB,CAAC,cACG,UAAS,YAAW;gBAChB,IAAI,OAAO;;;YAKvB,UAAU,WAAW,iBAAiB,CAAC,UAAU,cAAc,UAC3D,UAAS,QAAQ,YAAY,QAAQ;gBAEjC,OAAO,MAAM;oBACT,MAAM;oBACN,aAAa;oBACb,QAAQ;;;gBAGZ,OAAO,KAAK,UAAS,MAAM;oBACvB,OAAO,OAAO,GAAG;;;gBAGrB,OAAO,KAAK,YACZ;oBACI,OAAO,GAAG;;;gBAId,OAAO,WAAW,UAAS,MAAM;oBAC7B,OAAO,OAAO,SAAS;;;gBAI3B,OAAO,oBAAoB,YAAW;oBAClC,OAAO,WAAW,uBAAuB;wBACrC,MAAM;;;;;YAKtB,UAAU,WAAW,mBAAkB,CAAC,UAAS,SAAQ,UAAS,QAAO,OAAM;gBAC3E,IAAI,UAAU;oBACV,SAAS;oBACT,UAAU;oBACV,WAAW;;gBAEf,OAAO,YAAW,YAAW;oBACzB,IAAI,eAAe;oBACnB,MAAM,KAAK,uCAAsC,cAAc,QAAQ,UAAS,UAAS,IAEtF,MAAM,YACT;;;gBAKJ,OAAO,WAAW,UAAU,KAAK;oBAC7B,MAAM,IAAI,uCAAuC,QAAQ,UAAS,UAAS;wBACvE,OAAO,OAAM;wBACb,EAAE,QAAQ,OAAO,MAAK,EAAC,eAAgB,iBAAgB,MAAM;uBAC9D,MAAM,YACT;;oBAIA,SAAS,cAAc,SAAS,OAAO;wBAEnC,IAAI,QAAQ,cAAc,QAAQ,WAAW,cAAc;4BACvD,MAAM,UAAU,QAAQ,WAAW;;;;;;;GARhD","file":"client/controllers.js","sourcesContent":["/**\r\n * Created by knandula on 26/02/16.\r\n */\r\n'use strict'\r\nimport appModule from 'client/config';\r\n\r\nappModule.controller('LoginController',\r\n    ['$rootScope',\r\n        function($rootScope){\r\n            var self = this;\r\n\r\n        }\r\n]);\r\n\r\nappModule.controller('AppController', ['$scope', '$rootScope', '$state',\r\n    function($scope, $rootScope, $state) {\r\n        // App globals\r\n        $scope.app = {\r\n            name: 'StreatBeat',\r\n            description: 'StreatBeat',\r\n            author: 'StreatBeat'\r\n        };\r\n        // Checks if the given state is the current state\r\n        $scope.is = function(name) {\r\n            return $state.is(name);\r\n        };\r\n\r\n        $scope.go = function()\r\n        {\r\n            $state.go('main');\r\n        }\r\n\r\n        // Checks if the given state/child states are present\r\n        $scope.includes = function(name) {\r\n            return $state.includes(name);\r\n        };\r\n\r\n        // Broadcasts a message to pgSearch directive to toggle search overlay\r\n        $scope.showSearchOverlay = function() {\r\n            $scope.$broadcast('toggleSearchOverlay', {\r\n                show: true\r\n            });\r\n        };\r\n    }]);\r\n\r\nappModule.controller(\"streatbeatcntrl\",['$scope','$http',function($scope,$http){\r\n    var myStyle = {\r\n        \"color\": \"#ff7800\",\r\n        \"weight\": 5,\r\n        \"opacity\": 0.65\r\n    };\r\n    $scope.postLayer= function() {\r\n        var good_geojson = '{\"type\": \"Feature\", \"properties\": {\"name\": \"Diamond park\", \"amenity\": \"Floating Stadium\", \"popupContent\": \"Fantastic!\"}, \"geometry\": {\"type\": \"Point\",\"coordinates\": [100, 80]}}';\r\n        $http.post('http://localhost:8000/api/maplayers',good_geojson).success(function(response){\r\n\r\n        }).error(function()\r\n        {\r\n\r\n        });\r\n    }\r\n\r\n    $scope.callback = function (map) {\r\n        $http.get('http://localhost:8000/api/maplayers').success(function(response){\r\n            $scope.lays= response;\r\n            L.geoJson($scope.lays,{onEachFeature : onEachFeature}).addTo(map);\r\n        }).error(function()\r\n        {\r\n\r\n        });\r\n\r\n        function onEachFeature(feature, layer) {\r\n            // does this feature have a property named popupContent?\r\n            if (feature.properties && feature.properties.popupContent) {\r\n                layer.bindPopup(feature.properties.popupContent);\r\n            }\r\n        }\r\n    };\r\n\r\n}])"],"sourceRoot":"/source/"}